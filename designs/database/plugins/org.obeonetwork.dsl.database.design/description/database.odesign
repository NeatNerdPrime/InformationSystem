<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/description/1.1.0" xmlns:properties="http://www.eclipse.org/sirius/properties/1.0.0" xmlns:properties-ext-widgets-reference="http://www.eclipse.org/sirius/properties/1.0.0/ext/widgets/reference" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/diagram/description/tool/1.1.0" xmlns:tool_1="http://www.eclipse.org/sirius/description/tool/1.1.0" documentation="Copyright (c) 2011, 2017 Obeo.&#xD;&#xA;All rights reserved. This program and the accompanying materials&#xD;&#xA;are made available under the terms of the Eclipse Public License v1.0&#xD;&#xA;which accompanies this distribution, and is available at&#xD;&#xA;http://www.eclipse.org/legal/epl-v10.html&#xD;&#xA;&#xD;&#xA;Contributors:&#xD;&#xA;   Obeo - initial API and implementation" name="database" version="12.0.0.2017041100">
  <ownedViewpoints name="Database" modelFileExtension="*.database">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="Reused Description" domainClass="database.DataBase" preconditionExpression="false">
      <defaultLayer name="Default">
        <toolSections name="Reused Tools">
          <ownedTools xsi:type="tool:DirectEditLabel" name="EDT_DatabaseElement">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:self.editDatabaseElementLabel(arg0)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ToolDescription" name="CRE_Sequence" label="Sequence" precondition="service:sequenceCreationPreCondition(elementView)" iconPath="/org.obeonetwork.dsl.database.edit/icons/full/obj16/Sequence.gif">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="[element.oclIsKindOf(database::TableContainer)/]">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="database.Sequence" referenceName="sequences">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['Sequence' + eContainer(database::TableContainer).sequences->size()/]"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="DB_SequencePreventDelete">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="[not self.oclAsType(database::Column).nullable/]">
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@defaultLayer/@containerMappings[name='DB_Table']/@subNodeMappings[name='DB_Column']/@style" attributeName="labelFormat" value="bold"/>
          </vsmElementCustomizations>
        </customization>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="Database Diagram" titleExpression="[name +' Database'/]" domainClass="database.DataBase">
      <metamodel href="platform:/plugin/org.obeonetwork.dsl.database/model/database.ecore#/"/>
      <metamodel href="platform:/plugin/org.obeonetwork.dsl.typeslibrary/model/typeslibrary.ecore#/"/>
      <defaultLayer name="Default">
        <edgeMappings name="DB_ForeignKey" labelDirectEdit="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Reused%20Description']/@defaultLayer/@toolSections.0/@ownedTools[name='EDT_DatabaseElement']" semanticCandidatesExpression="service:getForeignKeys(diagram)" semanticElements="var:self" sourceMapping="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@defaultLayer/@containerMappings[name='DB_Table'] //@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@additionalLayers[name='External%20Tables']/@containerMappings[name='DB_Referenced_External_Table'] //@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@additionalLayers[name='External%20Tables']/@containerMappings[name='DB_Non_Referenced_External_Table']" targetMapping="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@defaultLayer/@containerMappings[name='DB_Table'] //@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@additionalLayers[name='External%20Tables']/@containerMappings[name='DB_Referenced_External_Table'] //@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@additionalLayers[name='External%20Tables']/@containerMappings[name='DB_Non_Referenced_External_Table']" targetFinderExpression="[getTargetTable()/]" sourceFinderExpression="[getSourceTable()/]" domainClass="database.ForeignKey" useDomainElement="true">
          <style>
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription showIcon="false" labelExpression="feature:name">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="DB_Table" labelDirectEdit="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Reused%20Description']/@defaultLayer/@toolSections.0/@ownedTools[name='EDT_DatabaseElement']" semanticCandidatesExpression="feature:tables" domainClass="database.Table" childrenPresentation="List">
          <subNodeMappings name="DB_Column" labelDirectEdit="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Reused%20Description']/@defaultLayer/@toolSections.0/@ownedTools[name='EDT_DatabaseElement']" semanticCandidatesExpression="feature:columns" semanticElements="[self->including(sequence)/]" domainClass="database.Column">
            <style xsi:type="style:SquareDescription" labelExpression="service:getDatabaseElementLabel" labelAlignment="LEFT">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="DB_PrimaryKey" labelDirectEdit="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Reused%20Description']/@defaultLayer/@toolSections.0/@ownedTools[name='EDT_DatabaseElement']" semanticCandidatesExpression="feature:primaryKey" domainClass="database.PrimaryKey">
            <style xsi:type="style:SquareDescription" labelAlignment="LEFT">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
          </style>
        </containerMappings>
        <containerMappings name="DB_View" labelDirectEdit="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Reused%20Description']/@defaultLayer/@toolSections.0/@ownedTools[name='EDT_DatabaseElement']" semanticCandidatesExpression="service:getViews" domainClass="database.View" childrenPresentation="List">
          <subNodeMappings name="DB_viewColumn" semanticCandidatesExpression="feature:columns" domainClass="database.ViewElement">
            <style xsi:type="style:SquareDescription" labelExpression="service:getViewElementLabel" iconPath="/org.obeonetwork.dsl.database.edit/icons/full/obj16/Column.gif" labelAlignment="LEFT" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="DB_viewTable" semanticCandidatesExpression="feature:tables" domainClass="database.ViewElement">
            <style xsi:type="style:SquareDescription" iconPath="/org.obeonetwork.dsl.database.edit/icons/full/obj16/Table.gif" labelAlignment="LEFT" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" showIcon="false" tooltipExpression="feature:query">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_purple']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='purple']"/>
          </style>
        </containerMappings>
        <containerMappings name="DB_Sequence" deletionDescription="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Reused%20Description']/@defaultLayer/@toolSections.0/@ownedTools[name='DB_SequencePreventDelete']" semanticCandidatesExpression="service:tableContainerWithSequences()" domainClass="database.TableContainer" childrenPresentation="List">
          <subNodeMappings name="DB_SequenceNode" labelDirectEdit="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Reused%20Description']/@defaultLayer/@toolSections.0/@ownedTools[name='EDT_DatabaseElement']" semanticCandidatesExpression="service:allSequencesList()" domainClass="database.Sequence">
            <style xsi:type="style:SquareDescription" labelAlignment="LEFT" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" labelExpression="Sequences" iconPath="/org.obeonetwork.dsl.database.edit/icons/full/obj16/Sequence.gif">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
          </style>
        </containerMappings>
        <toolSections name="Database">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="CRE_Table" label="Table" containerMappings="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@defaultLayer/@containerMappings[name='DB_Table']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="database.Table" referenceName="tables">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['Table' + eContainer(database::TableContainer).tables->size()/]"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="CRE_View" label="View" containerMappings="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@defaultLayer/@containerMappings[name='DB_View']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="database.View" referenceName="tables">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['View' + eContainer(database::DataBase).tables->size()/]"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="CRE_Column" label="Column" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@defaultLayer/@containerMappings[name='DB_Table']/@subNodeMappings[name='DB_Column']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="database.Column" referenceName="columns">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['column' + eContainer(database::Table).columns->size()/]"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="CRE_PKColumn" label="PK Column" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@defaultLayer/@containerMappings[name='DB_Table']/@subNodeMappings[name='DB_Column']" iconPath="/org.obeonetwork.dsl.database.edit/icons/full/obj16/ColumnAndPrimaryKey.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="database.Column" referenceName="columns">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['column' + eContainer(database::Table).columns->size()/]"/>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[self.addToPrimaryKey()/]"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="CRE_PrimaryKey" label="Primary Key" precondition="[oclAsType(database::Table).primaryKey.oclIsUndefined()/]" nodeMappings="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@defaultLayer/@containerMappings[name='DB_Table']/@subNodeMappings[name='DB_PrimaryKey']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="database.PrimaryKey" referenceName="primaryKey">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['PK_' + eContainer(database::Table).name/]"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="CRE_ForeignKey" label="Foreign Key" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@defaultLayer/@edgeMappings[name='DB_ForeignKey']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:source.createForeignKey(target)">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['FK_' + source.oclAsType(database::Table).foreignKeys->size()/]"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Sequences" reusedTools="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Reused%20Description']/@defaultLayer/@toolSections.0/@ownedTools[name='CRE_Sequence']"/>
        <decorationDescriptionsSet>
          <decorationDescriptions xsi:type="description_1:MappingBasedDecoration" name="DEC_Table_HasConstraints" position="NORTH_EAST" preconditionExpression="[constraints->size() > 0/]" imageExpression="/org.obeonetwork.dsl.database.design/icons/decorator/Constraint.gif" mappings="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@defaultLayer/@containerMappings[name='DB_Table'] //@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@additionalLayers[name='External%20Tables']/@containerMappings[name='DB_Referenced_External_Table'] //@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@additionalLayers[name='External%20Tables']/@containerMappings[name='DB_Non_Referenced_External_Table'] //@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@additionalLayers[name='Index']/@containerMappings[name='DB_TableWithIndex']"/>
        </decorationDescriptionsSet>
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomizationReuse" reuse="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Reused%20Description']/@defaultLayer/@customization/@vsmElementCustomizations.0/@featureCustomizations.0" appliedOn="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@defaultLayer/@containerMappings[name='DB_Table']/@subNodeMappings[name='DB_Column']/@style"/>
        </customization>
      </defaultLayer>
      <additionalLayers name="Schemas" activeByDefault="true">
        <containerMappings name="DB_Schema" labelDirectEdit="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Reused%20Description']/@defaultLayer/@toolSections.0/@ownedTools[name='EDT_DatabaseElement']" semanticCandidatesExpression="feature:schemas" semanticElements="var:self" doubleClickDescription="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@additionalLayers[name='Schemas']/@toolSections.0/@subSections[name='Usability%20tools']/@ownedTools[name='DBL_NavigateToSchemaDiagram']" domainClass="database.Schema">
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
          </style>
        </containerMappings>
        <toolSections name="Schemas">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="CRE_Schema" label="Schema" containerMappings="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@additionalLayers[name='Schemas']/@containerMappings[name='DB_Schema']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="database.Schema" referenceName="schemas">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['Schema' + eContainer(database::DataBase).schemas->size()/]"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <subSections name="Usability tools">
            <ownedTools xsi:type="tool:DoubleClickDescription" name="DBL_NavigateToSchemaDiagram" mappings="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@additionalLayers[name='Schemas']/@containerMappings[name='DB_Schema']">
              <element name="element"/>
              <elementView name="elementView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Schema%20Diagram']"/>
              </initialOperation>
            </ownedTools>
          </subSections>
        </toolSections>
      </additionalLayers>
      <additionalLayers name="External Tables" activeByDefault="true">
        <containerMappings name="DB_Non_Referenced_External_Table" deletionDescription="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@additionalLayers[name='External%20Tables']/@toolSections.0/@ownedTools[name='DEL_Prevent_Deletion_Ext_Tables']" semanticCandidatesExpression="service:allNonReferencedExternalTables" createElements="false" semanticElements="var:self" domainClass="database.Table" childrenPresentation="List">
          <subNodeMappings name="DB_Ext_Column" deletionDescription="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@additionalLayers[name='External%20Tables']/@toolSections.0/@ownedTools[name='DEL_Prevent_Deletion_Ext_Tables']" semanticCandidatesExpression="feature:columns" semanticElements="[self->including(sequence)/]" domainClass="database.Column">
            <style xsi:type="style:SquareDescription" labelExpression="service:getDatabaseElementLabel" labelAlignment="LEFT">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="DB_Ext_PrimaryKey" deletionDescription="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@additionalLayers[name='External%20Tables']/@toolSections.0/@ownedTools[name='DEL_Prevent_Deletion_Ext_Tables']" semanticCandidatesExpression="feature:primaryKey" domainClass="database.PrimaryKey">
            <style xsi:type="style:SquareDescription" labelAlignment="LEFT">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" labelExpression="[ancestors()->filter(database::TableContainer)->reverse().name->sep('::') + '::'+name/]">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_green']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='green']"/>
          </style>
        </containerMappings>
        <containerMappings name="DB_Referenced_External_Table" deletionDescription="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@additionalLayers[name='External%20Tables']/@toolSections.0/@ownedTools[name='DEL_Prevent_Deletion_Ext_Tables']" semanticCandidatesExpression="service:allReferencedExternalTables" semanticElements="var:self" domainClass="database.Table" reusedNodeMappings="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@additionalLayers[name='External%20Tables']/@containerMappings[name='DB_Non_Referenced_External_Table']/@subNodeMappings[name='DB_Ext_Column'] //@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@additionalLayers[name='External%20Tables']/@containerMappings[name='DB_Non_Referenced_External_Table']/@subNodeMappings[name='DB_Ext_PrimaryKey']" childrenPresentation="List">
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" labelExpression="[ancestors()->filter(database::TableContainer)->reverse().name->sep('::') + '::'+name/]">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_green']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='green']"/>
          </style>
        </containerMappings>
        <toolSections name="External Tables">
          <ownedTools xsi:type="tool_1:SelectionWizardDescription" name="WIZ_ExternalTable" label="External Table" precondition="[oclIsKindOf(database::TableContainer)/]" forceRefresh="true" candidatesExpression="[(allSelectableExternalTables(diagram)->union(allSelectableExternalTables(diagram).ancestors()))->asOrderedSet()/]" tree="true" rootExpression="service:allRoots" childrenExpression="feature:eContents" message="Select an external table" iconPath="/org.obeonetwork.dsl.database.edit/icons/full/obj16/Table.gif" windowTitle="Import external table" windowImagePath="/org.obeonetwork.dsl.database.edit/icons/full/obj16/Table.gif">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@additionalLayers[name='External%20Tables']/@containerMappings[name='DB_Non_Referenced_External_Table']" containerViewExpression="var:diagram"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="DEL_Prevent_Deletion_Ext_Tables">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomizationReuse" reuse="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Reused%20Description']/@defaultLayer/@customization/@vsmElementCustomizations.0/@featureCustomizations.0" appliedOn="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@additionalLayers[name='External%20Tables']/@containerMappings[name='DB_Non_Referenced_External_Table']/@subNodeMappings[name='DB_Ext_Column']/@style"/>
        </customization>
      </additionalLayers>
      <additionalLayers name="Index" activeByDefault="true">
        <containerMappings xsi:type="description_1:ContainerMappingImport" name="DB_TableWithIndex" semanticCandidatesExpression="feature:tables" childrenPresentation="List" importedMapping="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@defaultLayer/@containerMappings[name='DB_Table']">
          <subNodeMappings name="DB_Column" labelDirectEdit="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Reused%20Description']/@defaultLayer/@toolSections.0/@ownedTools[name='EDT_DatabaseElement']" semanticCandidatesExpression="feature:columns" semanticElements="[self->including(sequence)/]" domainClass="database.Column">
            <style xsi:type="style:SquareDescription" labelExpression="service:getDatabaseElementLabel" labelAlignment="LEFT">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="DB_PrimaryKey" labelDirectEdit="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Reused%20Description']/@defaultLayer/@toolSections.0/@ownedTools[name='EDT_DatabaseElement']" semanticCandidatesExpression="feature:primaryKey" domainClass="database.PrimaryKey">
            <style xsi:type="style:SquareDescription" labelAlignment="LEFT">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="DB_Index" labelDirectEdit="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Reused%20Description']/@defaultLayer/@toolSections.0/@ownedTools[name='EDT_DatabaseElement']" semanticCandidatesExpression="feature:indexes" semanticElements="var:self" domainClass="database.Index">
            <style xsi:type="style:SquareDescription" labelExpression="service:getDatabaseElementLabel(diagram)" labelAlignment="LEFT">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
        </containerMappings>
        <toolSections name="Index">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="CRE_Index" label="Index" nodeMappings="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@additionalLayers[name='Index']/@containerMappings[name='DB_TableWithIndex']/@subNodeMappings[name='DB_Index']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="database.Index" referenceName="indexes">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['Index' + eContainer(database::Table).indexes->size()/]"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomizationReuse" reuse="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Reused%20Description']/@defaultLayer/@customization/@vsmElementCustomizations.0/@featureCustomizations.0" appliedOn="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@additionalLayers[name='Index']/@containerMappings[name='DB_TableWithIndex']/@subNodeMappings[name='DB_Column']/@style"/>
        </customization>
      </additionalLayers>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="Schema Diagram" titleExpression="[name + ' Schema'/]" domainClass="database.Schema">
      <metamodel href="platform:/plugin/org.obeonetwork.dsl.database/model/database.ecore#/"/>
      <metamodel href="platform:/plugin/org.obeonetwork.dsl.typeslibrary/model/typeslibrary.ecore#/"/>
      <defaultLayer name="Default" reusedMappings="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@defaultLayer/@containerMappings[name='DB_Table'] //@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@defaultLayer/@edgeMappings[name='DB_ForeignKey'] //@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@defaultLayer/@containerMappings[name='DB_View'] //@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@defaultLayer/@containerMappings[name='DB_Sequence']">
        <toolSections name="Schemas" reusedTools="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='CRE_Table'] //@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='CRE_View'] //@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='CRE_Column'] //@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='CRE_PKColumn'] //@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='CRE_PrimaryKey'] //@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='CRE_ForeignKey']"/>
        <toolSections name="Sequences" reusedTools="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Reused%20Description']/@defaultLayer/@toolSections.0/@ownedTools[name='CRE_Sequence']"/>
        <decorationDescriptionsSet>
          <decorationDescriptions xsi:type="description_1:MappingBasedDecoration" name="DEC_Table_HasConstraints" position="NORTH_EAST" preconditionExpression="[constraints->size() > 0/]" imageExpression="/org.obeonetwork.dsl.database.design/icons/decorator/Constraint.gif" mappings="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@defaultLayer/@containerMappings[name='DB_Table'] //@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@additionalLayers[name='External%20Tables']/@containerMappings[name='DB_Referenced_External_Table'] //@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@additionalLayers[name='External%20Tables']/@containerMappings[name='DB_Non_Referenced_External_Table'] //@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@additionalLayers[name='Index']/@containerMappings[name='DB_TableWithIndex']"/>
        </decorationDescriptionsSet>
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomizationReuse" reuse="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Reused%20Description']/@defaultLayer/@customization/@vsmElementCustomizations.0/@featureCustomizations.0" appliedOn="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@defaultLayer/@containerMappings[name='DB_Table']/@subNodeMappings[name='DB_Column']/@style"/>
        </customization>
      </defaultLayer>
      <additionalLayers name="External Tables" reusedMappings="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@additionalLayers[name='External%20Tables']/@containerMappings[name='DB_Non_Referenced_External_Table'] //@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@additionalLayers[name='External%20Tables']/@containerMappings[name='DB_Referenced_External_Table']" activeByDefault="true">
        <toolSections name="External Tables" reusedTools="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@additionalLayers[name='External%20Tables']/@toolSections.0/@ownedTools[name='WIZ_ExternalTable']"/>
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomizationReuse" reuse="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Reused%20Description']/@defaultLayer/@customization/@vsmElementCustomizations.0/@featureCustomizations.0" appliedOn="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@additionalLayers[name='External%20Tables']/@containerMappings[name='DB_Non_Referenced_External_Table']/@subNodeMappings[name='DB_Ext_Column']/@style"/>
        </customization>
      </additionalLayers>
      <additionalLayers name="Index" reusedMappings="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@additionalLayers[name='Index']/@containerMappings[name='DB_TableWithIndex']" activeByDefault="true">
        <toolSections name="Index" reusedTools="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@additionalLayers[name='Index']/@toolSections.0/@ownedTools[name='CRE_Index']"/>
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomizationReuse" reuse="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Reused%20Description']/@defaultLayer/@customization/@vsmElementCustomizations.0/@featureCustomizations.0" appliedOn="//@ownedViewpoints[name='Database']/@ownedRepresentations[name='Database%20Diagram']/@additionalLayers[name='Index']/@containerMappings[name='DB_TableWithIndex']/@subNodeMappings[name='DB_Column']/@style"/>
        </customization>
      </additionalLayers>
    </ownedRepresentations>
    <ownedJavaExtensions qualifiedClassName="org.obeonetwork.dsl.database.design.services.EcoreServices"/>
    <ownedJavaExtensions qualifiedClassName="org.obeonetwork.dsl.database.design.services.DatabaseServices"/>
    <ownedJavaExtensions qualifiedClassName="org.obeonetwork.dsl.database.design.services.label.DatabaseLabelServices"/>
    <ownedJavaExtensions qualifiedClassName="org.obeonetwork.dsl.database.design.services.label.DatabaseEditLabelServices"/>
    <ownedJavaExtensions qualifiedClassName="org.obeonetwork.dsl.database.design.services.DatabaseEEFPropertiesServices"/>
  </ownedViewpoints>
  <extensions xsi:type="properties:ViewExtensionDescription" name="Properties">
    <metamodels href="http://www.obeonetwork.org/dsl/database/1.0#/"/>
    <metamodels href="http://www.obeonetwork.org/dsl/typeslibrary/1.0#/"/>
    <categories name="Default Category">
      <pages name="Table Page" labelExpression="Table" domainClass="database::Table" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.0"/>
      <pages name="Column Page" labelExpression="Column" domainClass="database::Column" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.1"/>
      <pages name="PrimaryKey Page" labelExpression="Primary Key" domainClass="database::PrimaryKey" semanticCandidateExpression="service:self.getPrimaryKey()" groups="//@extensions.0/@categories.0/@groups.2"/>
      <pages name="ForeignKeys Page" labelExpression="Foreign Keys" domainClass="database::Table" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.3"/>
      <pages name="Indexes Page" labelExpression="Indexes" domainClass="database::Table" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.4"/>
      <pages name="Constraints page" labelExpression="Constraints" domainClass="database::Table" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.5"/>
      <groups name="Table Group" labelExpression="Properties" domainClass="database::Table" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="database::Table name" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('name')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('name'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('name').changeable" valueExpression="aql:self.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
          </initialOperation>
          <conditionalStyles preconditionExpression="aql:self.eClass().getEStructuralFeature('name').lowerBound = 1">
            <style>
              <labelFontFormat>bold</labelFontFormat>
            </style>
          </conditionalStyles>
        </controls>
        <controls xsi:type="properties-ext-widgets-reference:ExtReferenceDescription" name="database::Table columns" labelExpression="Columns:" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('columns'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('columns').changeable" referenceNameExpression="aql:'columns'">
          <onClickOperation>
            <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="New Dialog">
              <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                <initialOperation/>
              </buttons>
              <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                <initialOperation/>
              </buttons>
              <page name="Default Page" labelExpression="Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.0/@controls.1/@onClickOperation/@firstModelOperations/@groups.0"/>
              <groups name="Default Group" labelExpression="Group" semanticCandidateExpression="var:self"/>
            </firstModelOperations>
          </onClickOperation>
        </controls>
        <controls xsi:type="properties:TextAreaDescription" name="database::Table comments" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('comments')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('comments'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('comments').changeable" valueExpression="aql:self.comments">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="comments" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="Column Group" labelExpression="Properties" domainClass="database::Column" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="database::Column name" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('name')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('name'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('name').changeable" valueExpression="aql:self.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
          </initialOperation>
          <conditionalStyles preconditionExpression="aql:self.eClass().getEStructuralFeature('name').lowerBound = 1">
            <style>
              <labelFontFormat>bold</labelFontFormat>
            </style>
          </conditionalStyles>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="database::Column type" labelExpression="Type:" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('type'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('type').changeable" valueExpression="aql:self.type.nativeType" candidatesExpression="aql:input.emfEditServices(self.type).getChoiceOfValues(self.type.eClass().getEStructuralFeature('nativeType'))" candidateDisplayExpression="aql:candidate.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.type = null">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="typeslibrary::TypeInstance" referenceName="type" variableName="typeInstance"/>
              </subModelOperations>
              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="feature:type">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="nativeType" valueExpression="var:newValue"/>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:ContainerDescription" name="typesLibraries::TypeInstance features container">
          <controls xsi:type="properties:DynamicMappingForDescription" name="typeslibrary::TypeInstance iterator" iterator="feature" iterableExpression="aql:input.emfEditServices(self.type).getEStructuralFeatures()" forceRefresh="true">
            <ifs name="typeslibrary::TypeInstance Length Condition" predicateExpression="aql:self.type.typeInstanceLengthFeatureIsVisible(feature)">
              <widget xsi:type="properties:TextDescription" name="typeslibrary::TypeInstance length" labelExpression="aql:input.emfEditServices(self.type).getText(self.type.eClass().getEStructuralFeature('length')) + ':'" helpExpression="aql:input.emfEditServices(self.type).getDescription(self.type.eClass().getEStructuralFeature('length'))" isEnabledExpression="aql:self.type.eClass().getEStructuralFeature('length').changeable" valueExpression="aql:self.type.length">
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="feature:type">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="length" valueExpression="var:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs name="typeslibrary::TypeInstance precision Condition" predicateExpression="aql:self.type.typeInstancePrecisionFeatureIsVisible(feature)">
              <widget xsi:type="properties:TextDescription" name="typeslibrary::TypeInstance precision" labelExpression="aql:input.emfEditServices(self.type).getText(self.type.eClass().getEStructuralFeature('precision')) + ':'" helpExpression="aql:input.emfEditServices(self.type).getDescription(self.type.eClass().getEStructuralFeature('precision'))" isEnabledExpression="aql:self.type.eClass().getEStructuralFeature('precision').changeable" valueExpression="aql:self.type.precision">
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="feature:type">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="precision" valueExpression="var:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs name="typeslibrary::TypeInstance literals Condition" predicateExpression="aql:self.type.typeInstanceLiteralsFeatureIsVisible(feature)">
              <widget xsi:type="properties:ListDescription" name="typeslibrary::TypeInstance literals" labelExpression="aql:input.emfEditServices(self.type).getText(self.type.eClass().getEStructuralFeature('literals')) + ':'" helpExpression="aql:input.emfEditServices(self.type).getDescription(self.type.eClass().getEStructuralFeature('literals'))" isEnabledExpression="aql:self.type.eClass().getEStructuralFeature('literals').changeable" valueExpression="aql:self.literals" displayExpression="var:value"/>
            </ifs>
          </controls>
          <layout xsi:type="properties:FillLayoutDescription" orientation="HORIZONTAL"/>
        </controls>
        <controls xsi:type="properties:ContainerDescription" name="database::Column nullable-pk-unique">
          <controls xsi:type="properties:CheckboxDescription" name="database::Column nullable" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('nullable'))" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('nullable'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('nullable').changeable" valueExpression="aql:self.nullable">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="nullable" valueExpression="var:newValue"/>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:CheckboxDescription" name="database::Column In primaryKey" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('inPrimaryKey'))" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('inPrimaryKey'))" valueExpression="aql:self.inPrimaryKey">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:self.updatePrimaryKey(newValue)"/>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:CheckboxDescription" name="database::Column unique" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('unique'))" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('unique'))" valueExpression="aql:self.unique">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:self.updateIndexes(newValue)"/>
            </initialOperation>
          </controls>
          <layout xsi:type="properties:FillLayoutDescription" orientation="HORIZONTAL"/>
        </controls>
        <controls xsi:type="properties:CheckboxDescription" name="database::Column autoincrement" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('autoincrement'))" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('autoincrement'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('autoincrement').changeable" valueExpression="aql:self.autoincrement">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="autoincrement" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties-ext-widgets-reference:ExtReferenceDescription" name="database::Column sequence" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('sequence')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('sequence')) + ':'" isEnabledExpression="aql:self.eClass().getEStructuralFeature('sequence').changeable" referenceNameExpression="aql:'sequence'"/>
        <controls xsi:type="properties:CustomDescription" name="org.obeonetwork.dsl.database.design.custom.reference" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('sequence')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('sequence')) + ':'" isEnabledExpression="aql:self.eClass().getEStructuralFeature('sequence').changeable">
          <customExpressions name="referenceNameExpression" customExpression="aql:'sequence'"/>
          <customExpressions name="enableAddButtonExpression" customExpression="aql:not(self.eClass().getEStructuralFeature('sequence').isMany()) and not(self.eClass().getEStructuralFeature('sequence').oclAsType(ecore::EReference).containment)"/>
        </controls>
        <controls xsi:type="properties:TextDescription" name="database::Column defaultValue" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('defaultValue')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('defaultValue'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('defaultValue').changeable" valueExpression="aql:self.defaultValue">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="defaultValue" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextAreaDescription" name="database::Column comments" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('comments')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('comments'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('comments').changeable" valueExpression="aql:self.comments">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="comments" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="PrimaryKey Group" labelExpression="Properties" domainClass="database::PrimaryKey" semanticCandidateExpression="service:self.getPrimaryKey()">
        <controls xsi:type="properties:TextDescription" name="database::PrimaryKey name" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('name')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('name'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('name').changeable" valueExpression="aql:self.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
          </initialOperation>
          <conditionalStyles preconditionExpression="aql:self.eClass().getEStructuralFeature('name').lowerBound = 1">
            <style>
              <labelFontFormat>bold</labelFontFormat>
            </style>
          </conditionalStyles>
        </controls>
        <controls xsi:type="properties-ext-widgets-reference:ExtReferenceDescription" name="database::PrimaryKey columns" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('columns')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('columns'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('columns').changeable" referenceNameExpression="aql:'columns'"/>
        <controls xsi:type="properties:ListDescription" name="database::PrimaryKey columns2" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('columns')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('columns'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('columns').changeable" valueExpression="feature:columns" displayExpression="aql:input.emfEditServices(value).getText()">
          <actions imageExpression="org.obeonetwork.dsl.environment.properties/icons/full16/Edit_16x16.gif">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
            </initialOperation>
          </actions>
          <actions imageExpression="org.obeonetwork.dsl.environment.properties/icons/full16/Add_16x16.gif">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
            </initialOperation>
          </actions>
          <actions imageExpression="org.obeonetwork.dsl.environment.properties/icons/full16/Delete_16x16.gif">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
            </initialOperation>
          </actions>
          <actions imageExpression="org.obeonetwork.dsl.environment.properties/icons/full16/ArrowUp_16x16.gif">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
            </initialOperation>
          </actions>
          <actions imageExpression="org.obeonetwork.dsl.environment.properties/icons/full16/ArrowDown_16x16.gif">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
            </initialOperation>
          </actions>
        </controls>
        <controls xsi:type="properties:TextAreaDescription" name="database::PrimaryKey comments" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('comments')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('comments'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('comments').changeable" valueExpression="aql:self.comments">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="comments" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="ForeignKeys Group" labelExpression="Properties" domainClass="database::Table" semanticCandidateExpression="var:self">
        <controls xsi:type="properties-ext-widgets-reference:ExtReferenceDescription" name="database::Table foreignkeys" labelExpression="Foreign Keys:" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('foreignKeys'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('foreignKeys').changeable" referenceNameExpression="aql:'foreignKeys'"/>
      </groups>
      <groups name="Indexes Group" labelExpression="Properties" domainClass="database::Table" semanticCandidateExpression="var:self">
        <controls xsi:type="properties-ext-widgets-reference:ExtReferenceDescription" name="database::Table indexes" labelExpression="Indexes:" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('indexes'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('indexes').changeable" referenceNameExpression="aql:'indexes'"/>
      </groups>
      <groups name="Constraints Group" labelExpression="Properties" domainClass="database::Table" semanticCandidateExpression="var:self">
        <controls xsi:type="properties-ext-widgets-reference:ExtReferenceDescription" name="database::Table indexes" labelExpression="Constraints:" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('constraints'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('constraints').changeable" referenceNameExpression="aql:'constraints'"/>
      </groups>
    </categories>
  </extensions>
</description:Group>
